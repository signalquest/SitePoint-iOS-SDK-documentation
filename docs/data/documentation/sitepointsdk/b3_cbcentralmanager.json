{"abstract":[{"text":"Set up ","type":"text"},{"code":"CBCentralManager","type":"codeVoice"},{"text":" to scan for and connect to SitePoint Bluetooth devices.","type":"text"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/SitePointSdk\/documentation\/SitePointSdk"]]},"sections":[],"seeAlsoSections":[{"title":"Implementation","generated":true,"identifiers":["doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B1_Implementation-Guide","doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B2_Permissions","doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B4_CBPeripheral","doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B5_NTRIP"]}],"metadata":{"role":"article","modules":[{"name":"SitePointSdk"}],"roleHeading":"Article","title":"CBCentralManager"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"CBCentralManager","type":"codeVoice"},{"type":"text","text":" handles accessing Bluetooth, discovering devices, and managing connections."}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"SitePoint devices are Bluetooth peripherals. In Bluetooth terms, this means they are connected from a Bluetooth central device — a mobile device running an app, in this case.","type":"text"}]}],"name":"Note","style":"note","type":"aside"},{"inlineContent":[{"type":"text","text":"Once a SitePoint is connected, "},{"identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B4_CBPeripheral","isActive":true,"type":"reference"},{"text":" accesses its SignalQuest services.","type":"text"}],"type":"paragraph"},{"text":"Reference the example app","anchor":"Reference-the-example-app","level":3,"type":"heading"},{"inlineContent":[{"text":"In the SitePoint iOS Example App, the ","type":"text"},{"code":"CBCentralManager","type":"codeVoice"},{"type":"text","text":" code is in "},{"type":"codeVoice","code":"Bluetooth.swift"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This file also creates a delegate extension that conforms to  "},{"code":"CBCentralManagerDelegate","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This file contains some helper functions which aren’t mentioned below or required, such as a timer that handles removing stale devices from the list of previously found devices."}]}],"name":"Tip"},{"anchor":"Scanning-for-SitePoint-peripherals","type":"heading","text":"Scanning for SitePoint peripherals","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the example app, the scanning starts as soon as "},{"code":"centralManager","type":"codeVoice"},{"type":"text","text":" is available. The scan is initiated within the "},{"type":"codeVoice","code":"centralManagerDidUpdateState"},{"type":"text","text":" callback."}]},{"inlineContent":[{"type":"text","text":"The scan specifies a filter on service UUID using "},{"type":"codeVoice","code":"withServices:"},{"text":" to only return devices with the SitePoint service UUID of ","type":"text"},{"code":"00000100-34ed-12ef-63f4-317792041d17","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["func centralManagerDidUpdateState(_ central: CBCentralManager) {","    if central.state != .poweredOn {","        displayError(\"CBCentralManager is not powered on\")","    } else {","        centralManager?.scanForPeripherals(withServices: [SitePointPeripheral.sitePointServiceUuid], options: [CBCentralManagerScanOptionAllowDuplicatesKey : true])","        BluetoothManager.logger.info(\"Started scanning\")","    }","}"],"type":"codeListing","syntax":"swift"},{"text":"Handling discovered SitePoint peripherals","level":3,"anchor":"Handling-discovered-SitePoint-peripherals","type":"heading"},{"inlineContent":[{"type":"text","text":"When a scan finds a peripheral with the SitePoint Service UUID, it returns the peripheral using the "},{"type":"codeVoice","code":"centralManager.didDiscover"},{"text":" callback.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The example app uses this callback to build a list of found SitePoint peripherals along with some manufacturer data, from the related scan response."}],"type":"paragraph"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"The example app also keeps a list of timestamps for each found peripheral. This is not required, but may be helpful to avoid stale devices remaining in the list. This is paired with a timer to do a stale device check and cleanup."}],"type":"paragraph"}],"style":"note","name":"Note"},{"code":["func centralManager(_ central: CBCentralManager, didDiscover peripheral: CBPeripheral, advertisementData: [String: Any], rssi RSSI: NSNumber) {","    devicesToWhenFound[peripheral] = Date()","    devicesToScanStatus[peripheral] = getScanStatus(advertisementData)","}"],"syntax":"swift","type":"codeListing"},{"text":"Connecting to a SitePoint peripheral","type":"heading","level":3,"anchor":"Connecting-to-a-SitePoint-peripheral"},{"inlineContent":[{"type":"text","text":"Connect to a SitePoint by calling "},{"type":"codeVoice","code":"centralManager.connect"},{"text":" and passing in the peripheral to connect.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once connected, the "},{"code":"centralManager.didConnect","type":"codeVoice"},{"type":"text","text":" callback will be called."}]},{"level":3,"anchor":"Initiate-service-discovery","text":"Initiate service discovery","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"From the ","type":"text"},{"code":"centralManager.didConnect","type":"codeVoice"},{"type":"text","text":" callback, call "},{"type":"codeVoice","code":"discoverServices"},{"text":" on the peripheral to initiate the querying of services and their characteristics.","type":"text"}]},{"type":"codeListing","code":["func centralManager(_ central: CBCentralManager, didConnect peripheral: CBPeripheral) {","    AppDelegate.instance.sitePoint.didConnect(peripheral)","    peripheral.discoverServices(nil)","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"These queries, along with additional handling for reading and writing data, are handled by ","type":"text"},{"code":"CBPeripheral","type":"codeVoice"},{"type":"text","text":" which is covered in the next section."}]},{"type":"heading","anchor":"Read-Next","level":2,"text":"Read Next"},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B4_CBPeripheral","isActive":true}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B3_CBCentralManager","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sitepointsdk\/b3_cbcentralmanager"]}],"references":{"doc://SitePointSdk/documentation/SitePointSdk/B2_Permissions":{"title":"Permissions","identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B2_Permissions","abstract":[{"type":"text","text":"Add permissions for Bluetooth and Location services."}],"kind":"article","role":"article","type":"topic","url":"\/documentation\/sitepointsdk\/b2_permissions"},"doc://SitePointSdk/documentation/SitePointSdk/B4_CBPeripheral":{"title":"CBPeripheral","identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B4_CBPeripheral","abstract":[{"text":"Set up CBPeripheral to interface with a connected SitePoint Bluetooth device.","type":"text"}],"kind":"article","role":"article","type":"topic","url":"\/documentation\/sitepointsdk\/b4_cbperipheral"},"doc://SitePointSdk/documentation/SitePointSdk/B1_Implementation-Guide":{"abstract":[{"type":"text","text":"Review example app code to use the SitePoint SDK with Bluetooth and NTRIP."}],"identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B1_Implementation-Guide","kind":"article","title":"Implementation Guide","url":"\/documentation\/sitepointsdk\/b1_implementation-guide","type":"topic","role":"article"},"doc://SitePointSdk/documentation/SitePointSdk":{"title":"SitePointSdk","url":"\/documentation\/sitepointsdk","abstract":[{"text":"Provides an API and utilities for interfacing with SignalQuest’s SitePoint GNSS devices.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk","role":"collection","type":"topic"},"doc://SitePointSdk/documentation/SitePointSdk/B5_NTRIP":{"title":"NTRIP","abstract":[{"text":"Set up NTRIP connection handling and RTCM parsing for aiding the SitePoint.","type":"text"}],"role":"article","identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B5_NTRIP","url":"\/documentation\/sitepointsdk\/b5_ntrip","type":"topic","kind":"article"}}}