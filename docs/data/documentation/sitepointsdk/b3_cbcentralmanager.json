{"variants":[{"paths":["\/documentation\/sitepointsdk\/b3_cbcentralmanager"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B3_CBCentralManager"},"metadata":{"title":"CBCentralManager","modules":[{"name":"SitePointSdk"}],"role":"article","roleHeading":"Article"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"CBCentralManager","type":"codeVoice"},{"type":"text","text":" handles accessing Bluetooth, discovering devices, and managing connections."}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"SitePoint devices are Bluetooth peripherals. In Bluetooth terms, this means they are connected from a Bluetooth central device — a mobile device running an app, in this case."}],"type":"paragraph"}],"name":"Note","style":"note"},{"type":"paragraph","inlineContent":[{"text":"Once a SitePoint is connected, ","type":"text"},{"identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B4_CBPeripheral","type":"reference","isActive":true},{"type":"text","text":" accesses its SignalQuest services."}]},{"text":"Reference the example app","type":"heading","level":3,"anchor":"Reference-the-example-app"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the SitePoint iOS Example App, the "},{"code":"CBCentralManager","type":"codeVoice"},{"type":"text","text":" code is in "},{"code":"Bluetooth.swift","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"This file also creates a delegate extension that conforms to  "},{"code":"CBCentralManagerDelegate","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"This file contains some helper functions which aren’t mentioned below or required, such as a timer that handles removing stale devices from the list of previously found devices.","type":"text"}],"type":"paragraph"}],"style":"tip","name":"Tip","type":"aside"},{"type":"heading","text":"Scanning for SitePoint peripherals","anchor":"Scanning-for-SitePoint-peripherals","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the example app, the scanning starts as soon as "},{"type":"codeVoice","code":"centralManager"},{"type":"text","text":" is available. The scan is initiated within the "},{"type":"codeVoice","code":"centralManagerDidUpdateState"},{"type":"text","text":" callback."}]},{"type":"paragraph","inlineContent":[{"text":"The scan specifies a filter on service UUID using ","type":"text"},{"type":"codeVoice","code":"withServices:"},{"text":" to only return devices with the SitePoint service UUID of ","type":"text"},{"code":"00000100-34ed-12ef-63f4-317792041d17","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["func centralManagerDidUpdateState(_ central: CBCentralManager) {","    if central.state != .poweredOn {","        displayError(\"CBCentralManager is not powered on\")","    } else {","        centralManager?.scanForPeripherals(withServices: [SitePointPeripheral.sitePointServiceUuid], options: [CBCentralManagerScanOptionAllowDuplicatesKey : true])","        BluetoothManager.logger.info(\"Started scanning\")","    }","}"]},{"level":3,"type":"heading","anchor":"Handling-discovered-SitePoint-peripherals","text":"Handling discovered SitePoint peripherals"},{"inlineContent":[{"type":"text","text":"When a scan finds a peripheral with the SitePoint Service UUID, it returns the peripheral using the "},{"code":"centralManager.didDiscover","type":"codeVoice"},{"text":" callback.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The example app uses this callback to build a list of found SitePoint peripherals along with some manufacturer data, from the related scan response."}],"type":"paragraph"},{"name":"Note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"The example app also keeps a list of timestamps for each found peripheral. This is not required, but may be helpful to avoid stale devices remaining in the list. This is paired with a timer to do a stale device check and cleanup."}],"type":"paragraph"}],"style":"note"},{"syntax":"swift","code":["func centralManager(_ central: CBCentralManager, didDiscover peripheral: CBPeripheral, advertisementData: [String: Any], rssi RSSI: NSNumber) {","    devicesToWhenFound[peripheral] = Date()","    devicesToScanStatus[peripheral] = getScanStatus(advertisementData)","}"],"type":"codeListing"},{"text":"Connecting to a SitePoint peripheral","level":3,"type":"heading","anchor":"Connecting-to-a-SitePoint-peripheral"},{"inlineContent":[{"text":"Connect to a SitePoint by calling ","type":"text"},{"type":"codeVoice","code":"centralManager.connect"},{"type":"text","text":" and passing in the peripheral to connect."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once connected, the "},{"code":"centralManager.didConnect","type":"codeVoice"},{"type":"text","text":" callback will be called."}]},{"level":3,"anchor":"Initiate-service-discovery","type":"heading","text":"Initiate service discovery"},{"inlineContent":[{"text":"From the ","type":"text"},{"type":"codeVoice","code":"centralManager.didConnect"},{"text":" callback, call ","type":"text"},{"type":"codeVoice","code":"discoverServices"},{"type":"text","text":" on the peripheral to initiate the querying of services and their characteristics."}],"type":"paragraph"},{"syntax":"swift","code":["func centralManager(_ central: CBCentralManager, didConnect peripheral: CBPeripheral) {","    AppDelegate.instance.sitePoint.didConnect(peripheral)","    peripheral.discoverServices(nil)","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"These queries, along with additional handling for reading and writing data, are handled by "},{"type":"codeVoice","code":"CBPeripheral"},{"type":"text","text":" which is covered in the next section."}],"type":"paragraph"},{"text":"Read Next","type":"heading","anchor":"Read-Next","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B4_CBPeripheral","isActive":true,"type":"reference"}],"type":"paragraph"}]}]}]}],"abstract":[{"text":"Set up ","type":"text"},{"code":"CBCentralManager","type":"codeVoice"},{"text":" to scan for and connect to SitePoint Bluetooth devices.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Implementation","identifiers":["doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B1_Implementation-Guide","doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B2_Permissions","doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B4_CBPeripheral","doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B5_NTRIP"]}],"hierarchy":{"paths":[["doc:\/\/SitePointSdk\/documentation\/SitePointSdk"]]},"sections":[],"kind":"article","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://SitePointSdk/documentation/SitePointSdk/B4_CBPeripheral":{"url":"\/documentation\/sitepointsdk\/b4_cbperipheral","type":"topic","identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B4_CBPeripheral","abstract":[{"type":"text","text":"Set up CBPeripheral to interface with a connected SitePoint Bluetooth device."}],"kind":"article","title":"CBPeripheral","role":"article"},"doc://SitePointSdk/documentation/SitePointSdk/B2_Permissions":{"url":"\/documentation\/sitepointsdk\/b2_permissions","type":"topic","identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B2_Permissions","abstract":[{"text":"Add permissions for Bluetooth and Location services.","type":"text"}],"kind":"article","title":"Permissions","role":"article"},"doc://SitePointSdk/documentation/SitePointSdk":{"role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Provides an API and utilities for interfacing with SignalQuest’s SitePoint GNSS devices."}],"title":"SitePointSdk","url":"\/documentation\/sitepointsdk","identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk","type":"topic"},"doc://SitePointSdk/documentation/SitePointSdk/B5_NTRIP":{"url":"\/documentation\/sitepointsdk\/b5_ntrip","type":"topic","identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B5_NTRIP","abstract":[{"text":"Set up NTRIP connection handling and RTCM parsing for aiding the SitePoint.","type":"text"}],"kind":"article","title":"NTRIP","role":"article"},"doc://SitePointSdk/documentation/SitePointSdk/B1_Implementation-Guide":{"title":"Implementation Guide","abstract":[{"text":"Review example app code to use the SitePoint SDK with Bluetooth and NTRIP.","type":"text"}],"type":"topic","url":"\/documentation\/sitepointsdk\/b1_implementation-guide","identifier":"doc:\/\/SitePointSdk\/documentation\/SitePointSdk\/B1_Implementation-Guide","kind":"article","role":"article"}}}